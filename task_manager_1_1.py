import mysql.connector
from mysql.connector import Error

# Pripojenie + vytvorenie datab√°zy ak e≈°te neexistuje
def pripojenie_db():
    try:
        # Najprv pripojenie k serveru bez DB
        spojenie = mysql.connector.connect(
            host="localhost",
            user="root",
            password="1111"
        )
        kurzor = spojenie.cursor()
        kurzor.execute("CREATE DATABASE IF NOT EXISTS task_manager_1_1")
        spojenie.commit()
        kurzor.close()
        spojenie.close()

        # Potom sa pripoj√≠me u≈æ k vytvorenej datab√°ze
        spojenie = mysql.connector.connect(
            host="localhost",
            user="root",
            password="1111",
            database="task_manager_1_1"
        )
        if spojenie.is_connected():
            print("‚úÖ Pripojenie k datab√°ze prebehlo √∫spe≈°ne.")
            return spojenie

    except Error as e:
        print("‚ùå Chyba pri prip√°jan√≠ k datab√°ze:", e)
        exit()

# Vytvorenie tabuƒæky ulohy
def vytvor_tabulku(spojenie):
    try:
        cursor = spojenie.cursor()
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS ulohy (
                id INT AUTO_INCREMENT PRIMARY KEY,
                nazov VARCHAR(255) NOT NULL,
                popis TEXT,
                stav ENUM('Nezah√°jen√°', 'Prebieha', 'Hotov√°') DEFAULT 'Nezah√°jen√°',
                datum_vytvoreni DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        """)
        spojenie.commit()
        cursor.close()
        print("üß± Tabuƒæka 'ulohy' bola pripraven√°.")
    except Error as e:
        print("‚ùå Chyba pri vytv√°ran√≠ tabuƒæky:", e)

# Hlavn√© menu
def hlavne_menu():
    print("\nSpr√°vca √∫loh - Hlavn√© menu")
    print("1. Prida≈• nov√∫ √∫lohu")
    print("2. Zobrazi≈• √∫lohy")
    print("3. Aktualizova≈• √∫lohu")
    print("4. Odstr√°ni≈• √∫lohu")
    print("5. Ukonƒçi≈• program")
    volba = input("Vyberte mo≈ænos≈• (1-5): ")
    return volba

# Pridanie √∫lohy
def pridat_ulohu(spojenie):
    cursor = spojenie.cursor()

    while True:
        nazov = input("Zadaj n√°zov √∫lohy: ").strip()
        if not nazov:
            print("‚ùå N√°zov √∫lohy nesmie by≈• pr√°zdny. Sk√∫s to znova.")
        else:
            break

    while True:
        popis = input("Zadaj popis √∫lohy: ").strip()
        if not popis:
            print("‚ùå Popis √∫lohy nesmie by≈• pr√°zdny. Sk√∫s to znova.")
        else:
            break

    try:
        sql = "INSERT INTO ulohy (nazov, popis) VALUES (%s, %s)"
        hodnoty = (nazov, popis)
        cursor.execute(sql, hodnoty)
        spojenie.commit()
        print(f"‚úÖ √öloha ‚Äû{nazov}‚Äú bola √∫spe≈°ne pridan√° do datab√°zy.")
    except Error as e:
        print("‚ùå Chyba pri ukladan√≠ √∫lohy:", e)

# Zobrazenie √∫loh
def zobrazit_ulohy(spojenie):
    cursor = spojenie.cursor()
    try:
        sql = "SELECT id, nazov, popis, stav FROM ulohy WHERE stav IN ('Nezah√°jen√°', 'Prebieha')"
        cursor.execute(sql)
        vysledky = cursor.fetchall()

        if len(vysledky) == 0:
            print("‚ÑπÔ∏è Zoznam √∫loh je pr√°zdny alebo s√∫ v≈°etky √∫lohy hotov√©.")
        else:
            print("\nüìù Akt√≠vne √∫lohy:")
            for id, nazov, popis, stav in vysledky:
                print(f"#{id} | {nazov} ‚Äì {popis} [{stav}]")
    except Error as e:
        print("‚ùå Chyba pri naƒç√≠tan√≠ √∫loh:", e)

# Aktualiz√°cia stavu √∫lohy
def aktualizovat_ulohu(spojenie):
    cursor = spojenie.cursor()
    try:
        cursor.execute("SELECT id, nazov, stav FROM ulohy")
        ulohy = cursor.fetchall()

        if len(ulohy) == 0:
            print("üì≠ Zoznam √∫loh je pr√°zdny.")
            return

        print("\nüõ†Ô∏è √ölohy na aktualiz√°ciu:")
        for id, nazov, stav in ulohy:
            print(f"#{id} | {nazov} [{stav}]")

        vyber = input("Zadaj ID √∫lohy, ktorej stav chce≈° zmeni≈•: ")
        if not vyber.isdigit():
            print("‚ùå Neplatn√© ID.")
            return

        id_ulohy = int(vyber)
        cursor.execute("SELECT * FROM ulohy WHERE id = %s", (id_ulohy,))
        if cursor.fetchone() is None:
            print("‚ùå √öloha s t√Ωmto ID neexistuje.")
            return

        print("Vyber nov√Ω stav:")
        print("1. Prebieha")
        print("2. Hotov√°")
        volba = input("Zadaj mo≈ænos≈• (1-2): ")

        if volba == "1":
            novy_stav = "Prebieha"
        elif volba == "2":
            novy_stav = "Hotov√°"
        else:
            print("‚ùå Neplatn√° voƒæba.")
            return

        cursor.execute("UPDATE ulohy SET stav = %s WHERE id = %s", (novy_stav, id_ulohy))
        spojenie.commit()
        print(f"‚úÖ Stav √∫lohy s ID {id_ulohy} bol zmenen√Ω na '{novy_stav}'.")
    except Error as e:
        print("‚ùå Chyba pri aktualiz√°cii √∫lohy:", e)

# Odstr√°nenie √∫lohy
def odstranit_ulohu(spojenie):
    cursor = spojenie.cursor()
    try:
        cursor.execute("SELECT id, nazov, popis FROM ulohy")
        ulohy = cursor.fetchall()

        if len(ulohy) == 0:
            print("üì≠ Zoznam √∫loh je pr√°zdny.")
            return

        print("\nüóëÔ∏è √ölohy dostupn√© na odstr√°nenie:")
        for id, nazov, popis in ulohy:
            print(f"#{id} | {nazov} ‚Äì {popis}")

        vyber = input("Zadaj ID √∫lohy, ktor√∫ chce≈° odstr√°ni≈•: ")

        if not vyber.isdigit():
            print("‚ùå Zadal si neplatn√© ID.")
            return

        id_ulohy = int(vyber)

        cursor.execute("SELECT * FROM ulohy WHERE id = %s", (id_ulohy,))
        if cursor.fetchone() is None:
            print("‚ùå √öloha s tak√Ωm ID neexistuje.")
            return

        cursor.execute("DELETE FROM ulohy WHERE id = %s", (id_ulohy,))
        spojenie.commit()
        print(f"üóëÔ∏è √öloha s ID {id_ulohy} bola odstr√°nen√°.")
    except Error as e:
        print("‚ùå Chyba pri odstra≈àovan√≠ √∫lohy:", e)

# --- Spustenie programu ---
if __name__ == "__main__":
    spojenie = pripojenie_db()
    vytvor_tabulku(spojenie)

    while True:
        volba = hlavne_menu()

        if volba == "1":
            pridat_ulohu(spojenie)
        elif volba == "2":
            zobrazit_ulohy(spojenie)
        elif volba == "3":
            aktualizovat_ulohu(spojenie)
        elif volba == "4":
            odstranit_ulohu(spojenie)
        elif volba == "5":
            print("üëã Program sa ukonƒçuje...")
            spojenie.close()
            break
        else:
            print("‚ùå Neplatn√° voƒæba. Sk√∫s znova.")
